package common

import (
	"github.com/spf13/cobra"
)

func AddRemoteCachingFlags(cmd *cobra.Command) {
	cmd.Flags().String("experimental_circuit_breaker_strategy", "", "Specifies the strategy for the circuit breaker to use")
	cmd.Flags().String("experimental_downloader_config", "", "Specify a file to configure the remote downloader with")
	cmd.Flags().Bool("experimental_guard_against_concurrent_changes", false, "Turn this off to disable checking the ctime of input files of an action before uploading it to a remote cache")
	cmd.Flags().Bool("experimental_remote_cache_async", false, "If true, remote cache I/O will happen in the background instead of taking place as the part of a spawn")
	cmd.Flags().String("experimental_remote_cache_compression_threshold", "", "The minimum blob size required to compress/decompress with zstd")
	cmd.Flags().Bool("experimental_remote_cache_lease_extension", false, "If set to true, Bazel will extend the lease for outputs of remote actions during the build by sending `FindMissingBlobs` calls periodically to remote cache")
	cmd.Flags().String("experimental_remote_cache_ttl", "", "The guaranteed minimal TTL of blobs in the remote cache after their digests are recently referenced e.g. by an ActionResult or FindMissingBlobs")
	cmd.Flags().String("experimental_remote_capture_corrupted_outputs", "", "A path to a directory where the corrupted outputs will be captured to")
	cmd.Flags().Bool("experimental_remote_discard_merkle_trees", false, "If set to true, discard in-memory copies of the input root's Merkle tree and associated input mappings during calls to GetActionResult() and Execute()")
	cmd.Flags().String("experimental_remote_downloader", "", "A Remote Asset API endpoint URI, to be used as a remote download proxy")
	cmd.Flags().Bool("experimental_remote_downloader_local_fallback", false, "Whether to fall back to the local downloader if remote downloader fails")
	cmd.Flags().Bool("experimental_remote_execution_keepalive", false, "Whether to use keepalive for remote execution calls")
	cmd.Flags().String("experimental_remote_failure_rate_threshold", "", "Sets the allowed number of failure rate in percentage for a specific time window after which it stops calling to the remote cache/executor")
	cmd.Flags().String("experimental_remote_failure_window_interval", "", "The interval in which the failure rate of the remote requests are computed")
	cmd.Flags().Bool("experimental_remote_mark_tool_inputs", false, "If set to true, Bazel will mark inputs as tool inputs for the remote executor")
	cmd.Flags().Bool("experimental_remote_merkle_tree_cache", false, "If set to true, Merkle tree calculations will be memoized to improve the remote cache hit checking speed")
	cmd.Flags().String("experimental_remote_merkle_tree_cache_size", "", "The number of Merkle trees to memoize to improve the remote cache hit checking speed")
	cmd.Flags().String("experimental_remote_output_service", "", "HOST or HOST:PORT of a remote output service endpoint")
	cmd.Flags().String("experimental_remote_output_service_output_path_prefix", "", "The path under which the contents of output directories managed by the -- experimental_remote_output_service are placed")
	cmd.Flags().Bool("experimental_remote_require_cached", false, "If set to true, enforce that all actions that can run remotely are cached, or else fail the build")
	cmd.Flags().String("experimental_remote_scrubbing_config", "", "Enables remote cache key scrubbing with the supplied configuration file, which must be a protocol buffer in text format (see src/main/protobuf/remote_scrubbing.proto)")
	cmd.Flags().String("experimental_worker_for_repo_fetching", "", "The threading mode to use for repo fetching")
	cmd.Flags().Bool("incompatible_remote_build_event_upload_respect_no_cache", false, "Deprecated")
	cmd.Flags().Bool("incompatible_remote_downloader_send_all_headers", false, "Whether to send all values of a multi-valued header to the remote downloader instead of just the first")
	cmd.Flags().Bool("incompatible_remote_output_paths_relative_to_input_root", false, "If set to true, output paths are relative to input root instead of working directory")
	cmd.Flags().Bool("incompatible_remote_results_ignore_disk", false, "No-op Tags: incompatible_change")
	cmd.Flags().Bool("no-experimental_guard_against_concurrent_changes", false, "Turn this off to disable checking the ctime of input files of an action before uploading it to a remote cache")
	cmd.Flags().Bool("no-experimental_remote_cache_async", false, "If true, remote cache I/O will happen in the background instead of taking place as the part of a spawn")
	cmd.Flags().Bool("no-experimental_remote_cache_lease_extension", false, "If set to true, Bazel will extend the lease for outputs of remote actions during the build by sending `FindMissingBlobs` calls periodically to remote cache")
	cmd.Flags().Bool("no-experimental_remote_discard_merkle_trees", false, "If set to true, discard in-memory copies of the input root's Merkle tree and associated input mappings during calls to GetActionResult() and Execute()")
	cmd.Flags().Bool("no-experimental_remote_downloader_local_fallback", false, "Whether to fall back to the local downloader if remote downloader fails")
	cmd.Flags().Bool("no-experimental_remote_execution_keepalive", false, "Whether to use keepalive for remote execution calls")
	cmd.Flags().Bool("no-experimental_remote_mark_tool_inputs", false, "If set to true, Bazel will mark inputs as tool inputs for the remote executor")
	cmd.Flags().Bool("no-experimental_remote_merkle_tree_cache", false, "If set to true, Merkle tree calculations will be memoized to improve the remote cache hit checking speed")
	cmd.Flags().Bool("no-experimental_remote_require_cached", false, "If set to true, enforce that all actions that can run remotely are cached, or else fail the build")
	cmd.Flags().Bool("no-incompatible_remote_build_event_upload_respect_no_cache", false, "Deprecated")
	cmd.Flags().Bool("no-incompatible_remote_downloader_send_all_headers", false, "Whether to send all values of a multi-valued header to the remote downloader instead of just the first")
	cmd.Flags().Bool("no-incompatible_remote_output_paths_relative_to_input_root", false, "If set to true, output paths are relative to input root instead of working directory")
	cmd.Flags().Bool("no-incompatible_remote_results_ignore_disk", false, "No-op Tags: incompatible_change")
	cmd.Flags().Bool("no-remote_accept_cached", false, "Whether to accept remotely cached action results")
	cmd.Flags().Bool("no-remote_cache_compression", false, "If enabled, compress/decompress cache blobs with zstd when their size is at least --experimental_remote_cache_compression_threshold")
	cmd.Flags().Bool("no-remote_local_fallback", false, "Whether to fall back to standalone local execution strategy if remote execution fails")
	cmd.Flags().Bool("no-remote_upload_local_results", false, "Whether to upload locally executed action results to the remote cache if the remote cache supports it and the user is authorized to do so")
	cmd.Flags().Bool("no-remote_verify_downloads", false, "If set to true, Bazel will compute the hash sum of all remote downloads and  discard the remotely cached values if they don't match the expected value")
	cmd.Flags().Bool("remote_accept_cached", false, "Whether to accept remotely cached action results")
	cmd.Flags().String("remote_build_event_upload", "", "If set to 'all', all local outputs referenced by BEP are uploaded to remote cache")
	cmd.Flags().String("remote_bytestream_uri_prefix", "", "The hostname and instance name to be used in bytestream:// URIs that are written into build event streams")
	cmd.Flags().String("remote_cache", "", "A URI of a caching endpoint")
	cmd.Flags().Bool("remote_cache_compression", false, "If enabled, compress/decompress cache blobs with zstd when their size is at least --experimental_remote_cache_compression_threshold")
	cmd.Flags().StringSlice("remote_cache_header", []string{}, "Specify a header that will be included in cache requests: -- remote_cache_header=Name=Value")
	cmd.Flags().StringSlice("remote_default_exec_properties", []string{}, "Set the default exec properties to be used as the remote execution platform if an execution platform does not already set exec_properties")
	cmd.Flags().String("remote_default_platform_properties", "", "Set the default platform properties to be set for the remote execution API, if the execution platform does not already set remote_execution_properties")
	cmd.Flags().StringSlice("remote_download_regex", []string{}, "Force remote build outputs whose path matches this pattern to be downloaded, irrespective of --remote_download_outputs")
	cmd.Flags().StringSlice("remote_downloader_header", []string{}, "Specify a header that will be included in remote downloader requests: -- remote_downloader_header=Name=Value")
	cmd.Flags().StringSlice("remote_exec_header", []string{}, "Specify a header that will be included in execution requests: -- remote_exec_header=Name=Value")
	cmd.Flags().String("remote_execution_priority", "", "The relative priority of actions to be executed remotely")
	cmd.Flags().String("remote_executor", "", "HOST or HOST:PORT of a remote execution endpoint")
	cmd.Flags().String("remote_grpc_log", "", "If specified, a path to a file to log gRPC call related details")
	cmd.Flags().StringSlice("remote_header", []string{}, "Specify a header that will be included in requests: -- remote_header=Name=Value")
	cmd.Flags().String("remote_instance_name", "", "Value to pass as instance_name in the remote execution API")
	cmd.Flags().Bool("remote_local_fallback", false, "Whether to fall back to standalone local execution strategy if remote execution fails")
	cmd.Flags().String("remote_local_fallback_strategy", "", "No-op, deprecated")
	cmd.Flags().String("remote_max_connections", "", "Limit the max number of concurrent connections to remote cache/executor")
	cmd.Flags().String("remote_proxy", "", "Connect to the remote cache through a proxy")
	cmd.Flags().String("remote_result_cache_priority", "", "The relative priority of remote actions to be stored in remote cache")
	cmd.Flags().String("remote_retries", "", "The maximum number of attempts to retry a transient error")
	cmd.Flags().String("remote_retry_max_delay", "", "The maximum backoff delay between remote retry attempts")
	cmd.Flags().String("remote_timeout", "", "The maximum amount of time to wait for remote execution and cache calls")
	cmd.Flags().Bool("remote_upload_local_results", false, "Whether to upload locally executed action results to the remote cache if the remote cache supports it and the user is authorized to do so")
	cmd.Flags().Bool("remote_verify_downloads", false, "If set to true, Bazel will compute the hash sum of all remote downloads and  discard the remotely cached values if they don't match the expected value")

	// TODO add flag completion
}
