package common

import (
	"github.com/spf13/cobra"
)

func AddLoggingFlags(cmd *cobra.Command) {
	cmd.Flags().Bool("announce_rc", false, "Whether to announce rc options")
	cmd.Flags().Bool("attempt_to_print_relative_paths", false, "When printing the location part of messages, attempt to use a path relative to the workspace directory or one of the directories specified by -- package_path")
	cmd.Flags().String("bes_backend", "", "Specifies the build event service (BES) backend endpoint in the form [SCHEME://]HOST[:PORT]")
	cmd.Flags().Bool("bes_check_preceding_lifecycle_events", false, "Sets the field check_preceding_lifecycle_events_present on PublishBuildToolEventStreamRequest which tells BES to check whether it previously received InvocationAttemptStarted and BuildEnqueued events matching the current tool event")
	cmd.Flags().StringSlice("bes_header", []string{}, "Specify a header in NAME=VALUE form that will be included in BES requests")
	cmd.Flags().String("bes_instance_name", "", "Specifies the instance name under which the BES will persist uploaded BEP")
	cmd.Flags().StringSlice("bes_keywords", []string{}, "Specifies a list of notification keywords to be added the default set of keywords published to BES (\"command_name=<command_name> \", \"protocol_name=BEP\")")
	cmd.Flags().Bool("bes_lifecycle_events", false, "Specifies whether to publish BES lifecycle events")
	cmd.Flags().String("bes_oom_finish_upload_timeout", "", "Specifies how long bazel should wait for the BES/BEP upload to complete while OOMing")
	cmd.Flags().String("bes_outerr_buffer_size", "", "Specifies the maximal size of stdout or stderr to be buffered in BEP, before it is reported as a progress event")
	cmd.Flags().String("bes_outerr_chunk_size", "", "Specifies the maximal size of stdout or stderr to be sent to BEP in a single message")
	cmd.Flags().String("bes_proxy", "", "Connect to the Build Event Service through a proxy")
	cmd.Flags().String("bes_results_url", "", "Specifies the base URL where a user can view the information streamed to the BES backend")
	cmd.Flags().StringSlice("bes_system_keywords", []string{}, "Specifies a list of notification keywords to be included directly, without the \"user_keyword=\" prefix included for keywords supplied via -- bes_keywords")
	cmd.Flags().String("bes_timeout", "", "Specifies how long bazel should wait for the BES/BEP upload to complete after the build and tests have finished")
	cmd.Flags().String("bes_upload_mode", "", "Specifies whether the Build Event Service upload should block the build completion or should end the invocation immediately and finish the upload in the background")
	cmd.Flags().String("build_event_binary_file", "", "If non-empty, write a varint delimited binary representation of representation of the build event protocol to that file")
	cmd.Flags().Bool("build_event_binary_file_path_conversion", false, "Convert paths in the binary file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used Tags: affects_outputs")
	cmd.Flags().String("build_event_binary_file_upload_mode", "", "Specifies whether the Build Event Service upload for -- build_event_binary_file should block the build completion or should end the invocation immediately and finish the upload in the background")
	cmd.Flags().String("build_event_json_file", "", "If non-empty, write a JSON serialisation of the build event protocol to that file")
	cmd.Flags().Bool("build_event_json_file_path_conversion", false, "Convert paths in the json file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used Tags: affects_outputs")
	cmd.Flags().String("build_event_json_file_upload_mode", "", "Specifies whether the Build Event Service upload for -- build_event_json_file should block the build completion or should end the invocation immediately and finish the upload in the background")
	cmd.Flags().String("build_event_max_named_set_of_file_entries", "", "The maximum number of entries for a single named_set_of_files event; values smaller than 2 are ignored and no event splitting is performed")
	cmd.Flags().Bool("build_event_publish_all_actions", false, "Whether all actions should be published")
	cmd.Flags().String("build_event_text_file", "", "If non-empty, write a textual representation of the build event protocol to that file Tags: affects_outputs")
	cmd.Flags().Bool("build_event_text_file_path_conversion", false, "Convert paths in the text file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used Tags: affects_outputs")
	cmd.Flags().String("build_event_text_file_upload_mode", "", "Specifies whether the Build Event Service upload for -- build_event_text_file should block the build completion or should end the invocation immediately and finish the upload in the background")
	cmd.Flags().StringP("dump", "d", "", "output full profile data dump either in human-readable 'text' format or script-friendly 'raw' format")
	cmd.Flags().Bool("experimental_announce_profile_path", false, "If enabled, adds the JSON profile path to the log")
	cmd.Flags().Bool("experimental_bep_target_summary", false, "Whether to publish TargetSummary events")
	cmd.Flags().Bool("experimental_build_event_expand_filesets", false, "If true, expand Filesets in the BEP when presenting output files")
	cmd.Flags().Bool("experimental_build_event_fully_resolve_fileset_symlinks", false, "If true, fully resolve relative Fileset symlinks in the BEP when presenting output files")
	cmd.Flags().String("experimental_build_event_upload_max_retries", "", "The maximum number of times Bazel should retry uploading a build event")
	cmd.Flags().String("experimental_build_event_upload_retry_minimum_delay", "", "Initial, minimum delay for exponential backoff retries when BEP upload fails")
	cmd.Flags().String("experimental_build_event_upload_strategy", "", "Selects how to upload artifacts referenced in the build event protocol")
	cmd.Flags().Bool("experimental_collect_load_average_in_profiler", false, "If enabled, the profiler collects the system's overall load average")
	cmd.Flags().Bool("experimental_collect_pressure_stall_indicators", false, "If enabled, the profiler collects the Linux PSI data")
	cmd.Flags().Bool("experimental_collect_resource_estimation", false, "If enabled, the profiler collects CPU and memory usage estimation for local actions")
	cmd.Flags().Bool("experimental_collect_system_network_usage", false, "If enabled, the profiler collects the system's network usage")
	cmd.Flags().Bool("experimental_collect_worker_data_in_profiler", false, "If enabled, the profiler collects worker's aggregated resource data")
	cmd.Flags().String("experimental_command_profile", "", "Records a Java Flight Recorder profile for the duration of the command")
	cmd.Flags().StringSlice("experimental_profile_additional_tasks", []string{}, "Specifies additional profile tasks to be included in the profile")
	cmd.Flags().Bool("experimental_profile_include_primary_output", false, "Includes the extra \"out\" attribute in action events that contains the exec path to the action's primary output")
	cmd.Flags().Bool("experimental_profile_include_target_label", false, "Includes target label in action events' JSON profile data")
	cmd.Flags().Bool("experimental_record_metrics_for_all_mnemonics", false, "By default the number of action types is limited to the 20 mnemonics with the largest number of executed actions")
	cmd.Flags().Bool("experimental_run_bep_event_include_residue", false, "Whether to include the command-line residue in run build events which could contain the residue")
	cmd.Flags().Bool("experimental_stream_log_file_uploads", false, "Stream log file uploads directly to the remote storage rather than writing them to disk")
	cmd.Flags().String("experimental_workspace_rules_log_file", "", "Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos")
	cmd.Flags().String("generate_json_trace_profile", "", "If enabled, Bazel profiles the build and writes a JSON-format profile into a file in the output base")
	cmd.Flags().Bool("heap_dump_on_oom", false, "Whether to manually output a heap dump if an OOM is thrown (including manual OOMs due to reaching --gc_thrashing_limits)")
	cmd.Flags().Bool("legacy_important_outputs", false, "Use this to suppress generation of the legacy important_outputs field in the TargetComplete event")
	cmd.Flags().String("logging", "", "The logging level")
	cmd.Flags().String("memory_profile", "", "If set, write memory usage data to the specified file at phase ends and stable heap to master log at end of build")
	cmd.Flags().String("memory_profile_stable_heap_parameters", "", "Tune memory profile's computation of stable heap at end of build")
	cmd.Flags().Bool("no-announce_rc", false, "Whether to announce rc options")
	cmd.Flags().Bool("no-attempt_to_print_relative_paths", false, "When printing the location part of messages, attempt to use a path relative to the workspace directory or one of the directories specified by -- package_path")
	cmd.Flags().Bool("no-bes_check_preceding_lifecycle_events", false, "Sets the field check_preceding_lifecycle_events_present on PublishBuildToolEventStreamRequest which tells BES to check whether it previously received InvocationAttemptStarted and BuildEnqueued events matching the current tool event")
	cmd.Flags().Bool("no-bes_lifecycle_events", false, "Specifies whether to publish BES lifecycle events")
	cmd.Flags().Bool("no-build_event_binary_file_path_conversion", false, "Convert paths in the binary file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used Tags: affects_outputs")
	cmd.Flags().Bool("no-build_event_json_file_path_conversion", false, "Convert paths in the json file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used Tags: affects_outputs")
	cmd.Flags().Bool("no-build_event_publish_all_actions", false, "Whether all actions should be published")
	cmd.Flags().Bool("no-build_event_text_file_path_conversion", false, "Convert paths in the text file representation of the build event protocol to more globally valid URIs whenever possible; if disabled, the file:// uri scheme will always be used Tags: affects_outputs")
	cmd.Flags().Bool("no-experimental_announce_profile_path", false, "If enabled, adds the JSON profile path to the log")
	cmd.Flags().Bool("no-experimental_bep_target_summary", false, "Whether to publish TargetSummary events")
	cmd.Flags().Bool("no-experimental_build_event_expand_filesets", false, "If true, expand Filesets in the BEP when presenting output files")
	cmd.Flags().Bool("no-experimental_build_event_fully_resolve_fileset_symlinks", false, "If true, fully resolve relative Fileset symlinks in the BEP when presenting output files")
	cmd.Flags().Bool("no-experimental_collect_load_average_in_profiler", false, "If enabled, the profiler collects the system's overall load average")
	cmd.Flags().Bool("no-experimental_collect_pressure_stall_indicators", false, "If enabled, the profiler collects the Linux PSI data")
	cmd.Flags().Bool("no-experimental_collect_resource_estimation", false, "If enabled, the profiler collects CPU and memory usage estimation for local actions")
	cmd.Flags().Bool("no-experimental_collect_system_network_usage", false, "If enabled, the profiler collects the system's network usage")
	cmd.Flags().Bool("no-experimental_collect_worker_data_in_profiler", false, "If enabled, the profiler collects worker's aggregated resource data")
	cmd.Flags().Bool("no-experimental_profile_include_primary_output", false, "Includes the extra \"out\" attribute in action events that contains the exec path to the action's primary output")
	cmd.Flags().Bool("no-experimental_profile_include_target_label", false, "Includes target label in action events' JSON profile data")
	cmd.Flags().Bool("no-experimental_record_metrics_for_all_mnemonics", false, "By default the number of action types is limited to the 20 mnemonics with the largest number of executed actions")
	cmd.Flags().Bool("no-experimental_run_bep_event_include_residue", false, "Whether to include the command-line residue in run build events which could contain the residue")
	cmd.Flags().Bool("no-experimental_stream_log_file_uploads", false, "Stream log file uploads directly to the remote storage rather than writing them to disk")
	cmd.Flags().String("no-generate_json_trace_profile", "", "If enabled, Bazel profiles the build and writes a JSON-format profile into a file in the output base")
	cmd.Flags().Bool("no-heap_dump_on_oom", false, "Whether to manually output a heap dump if an OOM is thrown (including manual OOMs due to reaching --gc_thrashing_limits)")
	cmd.Flags().Bool("no-legacy_important_outputs", false, "Use this to suppress generation of the legacy important_outputs field in the TargetComplete event")
	cmd.Flags().Bool("no-record_full_profiler_data", false, "By default, Bazel profiler will record only aggregated data for fast but numerous events (such as statting the file)")
	cmd.Flags().Bool("no-slim_profile", false, "Slims down the size of the JSON profile by merging events if the profile gets  too large")
	cmd.Flags().String("profile", "", "If set, profile Bazel and write data to the specified file")
	cmd.Flags().Bool("record_full_profiler_data", false, "By default, Bazel profiler will record only aggregated data for fast but numerous events (such as statting the file)")
	cmd.Flags().String("remote_print_execution_messages", "", "Choose when to print remote execution messages")
	cmd.Flags().Bool("slim_profile", false, "Slims down the size of the JSON profile by merging events if the profile gets  too large")
	cmd.Flags().String("starlark_cpu_profile", "", "Writes into the specified file a pprof profile of CPU usage by all Starlark threads")
	cmd.Flags().String("tool_tag", "", "A tool name to attribute this Bazel invocation to")
	cmd.Flags().StringSlice("ui_event_filters", []string{}, "Specifies which events to show in the UI")

	// TODO add flag completion
}
